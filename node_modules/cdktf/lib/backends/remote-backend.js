"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.PrefixedRemoteWorkspaces = exports.NamedRemoteWorkspace = exports.DataTerraformRemoteState = exports.RemoteBackend = void 0;
const terraform_backend_1 = require("../terraform-backend");
const util_1 = require("../util");
const terraform_remote_state_1 = require("../terraform-remote-state");
/**
 * @experimental
 */
class RemoteBackend extends terraform_backend_1.TerraformBackend {
    /**
     * @experimental
     */
    constructor(scope, props) {
        super(scope, "backend", "remote");
        this.props = props;
    }
    /**
     * @experimental
     */
    synthesizeAttributes() {
        return util_1.keysToSnakeCase({ ...this.props });
    }
}
exports.RemoteBackend = RemoteBackend;
/**
 * @experimental
 */
class DataTerraformRemoteState extends terraform_remote_state_1.TerraformRemoteState {
    /**
     * @experimental
     */
    constructor(scope, id, config) {
        super(scope, id, "remote", config);
    }
}
exports.DataTerraformRemoteState = DataTerraformRemoteState;
/**
 * @experimental
 */
class NamedRemoteWorkspace {
    /**
     * @experimental
     */
    constructor(name) {
        this.name = name;
    }
}
exports.NamedRemoteWorkspace = NamedRemoteWorkspace;
/**
 * @experimental
 */
class PrefixedRemoteWorkspaces {
    /**
     * @experimental
     */
    constructor(prefix) {
        this.prefix = prefix;
    }
}
exports.PrefixedRemoteWorkspaces = PrefixedRemoteWorkspaces;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicmVtb3RlLWJhY2tlbmQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJyZW1vdGUtYmFja2VuZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFDQSw0REFBd0Q7QUFDeEQsa0NBQTBDO0FBQzFDLHNFQUFpRzs7OztBQUVqRyxNQUFhLGFBQWMsU0FBUSxvQ0FBZ0I7Ozs7SUFDL0MsWUFBWSxLQUFnQixFQUFtQixLQUF5QjtRQUNwRSxLQUFLLENBQUMsS0FBSyxFQUFFLFNBQVMsRUFBRSxRQUFRLENBQUMsQ0FBQztRQURTLFVBQUssR0FBTCxLQUFLLENBQW9CO0lBRXhFLENBQUM7Ozs7SUFFUyxvQkFBb0I7UUFDMUIsT0FBTyxzQkFBZSxDQUFDLEVBQUUsR0FBRyxJQUFJLENBQUMsS0FBSyxFQUFFLENBQUMsQ0FBQztJQUM5QyxDQUFDO0NBQ0o7QUFSRCxzQ0FRQzs7OztBQUVELE1BQWEsd0JBQXlCLFNBQVEsNkNBQW9COzs7O0lBQzlELFlBQVksS0FBZ0IsRUFBRSxFQUFVLEVBQUUsTUFBNEM7UUFDbEYsS0FBSyxDQUFDLEtBQUssRUFBRSxFQUFFLEVBQUUsUUFBUSxFQUFFLE1BQU0sQ0FBQyxDQUFDO0lBQ3ZDLENBQUM7Q0FDSjtBQUpELDREQUlDOzs7O0FBYUQsTUFBYSxvQkFBb0I7Ozs7SUFDN0IsWUFBMEIsSUFBWTtRQUFaLFNBQUksR0FBSixJQUFJLENBQVE7SUFBRyxDQUFDO0NBQzdDO0FBRkQsb0RBRUM7Ozs7QUFFRCxNQUFhLHdCQUF3Qjs7OztJQUNqQyxZQUEwQixNQUFjO1FBQWQsV0FBTSxHQUFOLE1BQU0sQ0FBUTtJQUFHLENBQUM7Q0FDL0M7QUFGRCw0REFFQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbnN0cnVjdCB9IGZyb20gXCJjb25zdHJ1Y3RzXCI7XG5pbXBvcnQgeyBUZXJyYWZvcm1CYWNrZW5kIH0gZnJvbSAnLi4vdGVycmFmb3JtLWJhY2tlbmQnO1xuaW1wb3J0IHsga2V5c1RvU25ha2VDYXNlIH0gZnJvbSBcIi4uL3V0aWxcIjtcbmltcG9ydCB7IFRlcnJhZm9ybVJlbW90ZVN0YXRlLCBEYXRhVGVycmFmb3JtUmVtb3RlU3RhdGVDb25maWcgfSBmcm9tIFwiLi4vdGVycmFmb3JtLXJlbW90ZS1zdGF0ZVwiO1xuXG5leHBvcnQgY2xhc3MgUmVtb3RlQmFja2VuZCBleHRlbmRzIFRlcnJhZm9ybUJhY2tlbmQge1xuICAgIGNvbnN0cnVjdG9yKHNjb3BlOiBDb25zdHJ1Y3QsIHByaXZhdGUgcmVhZG9ubHkgcHJvcHM6IFJlbW90ZUJhY2tlbmRQcm9wcykge1xuICAgICAgICBzdXBlcihzY29wZSwgXCJiYWNrZW5kXCIsIFwicmVtb3RlXCIpO1xuICAgIH1cblxuICAgIHByb3RlY3RlZCBzeW50aGVzaXplQXR0cmlidXRlcygpOiB7IFtuYW1lOiBzdHJpbmddOiBhbnkgfSB7XG4gICAgICAgIHJldHVybiBrZXlzVG9TbmFrZUNhc2UoeyAuLi50aGlzLnByb3BzIH0pO1xuICAgIH1cbn1cblxuZXhwb3J0IGNsYXNzIERhdGFUZXJyYWZvcm1SZW1vdGVTdGF0ZSBleHRlbmRzIFRlcnJhZm9ybVJlbW90ZVN0YXRlIHtcbiAgICBjb25zdHJ1Y3RvcihzY29wZTogQ29uc3RydWN0LCBpZDogc3RyaW5nLCBjb25maWc6IERhdGFUZXJyYWZvcm1SZW1vdGVTdGF0ZVJlbW90ZUNvbmZpZykge1xuICAgICAgICBzdXBlcihzY29wZSwgaWQsIFwicmVtb3RlXCIsIGNvbmZpZyk7XG4gICAgfVxufVxuXG5leHBvcnQgaW50ZXJmYWNlIFJlbW90ZUJhY2tlbmRQcm9wcyB7XG4gICAgcmVhZG9ubHkgaG9zdG5hbWU/OiBzdHJpbmc7XG4gICAgcmVhZG9ubHkgb3JnYW5pemF0aW9uOiBzdHJpbmc7XG4gICAgcmVhZG9ubHkgdG9rZW4/OiBzdHJpbmc7XG4gICAgcmVhZG9ubHkgd29ya3NwYWNlczogSVJlbW90ZVdvcmtzcGFjZTtcbn1cblxuZXhwb3J0IGludGVyZmFjZSBJUmVtb3RlV29ya3NwYWNlIHtcbiAgICBcbn1cblxuZXhwb3J0IGNsYXNzIE5hbWVkUmVtb3RlV29ya3NwYWNlIGltcGxlbWVudHMgSVJlbW90ZVdvcmtzcGFjZSB7XG4gICAgcHVibGljIGNvbnN0cnVjdG9yKHB1YmxpYyBuYW1lOiBzdHJpbmcpIHt9XG59XG5cbmV4cG9ydCBjbGFzcyBQcmVmaXhlZFJlbW90ZVdvcmtzcGFjZXMgaW1wbGVtZW50cyBJUmVtb3RlV29ya3NwYWNlIHtcbiAgICBwdWJsaWMgY29uc3RydWN0b3IocHVibGljIHByZWZpeDogc3RyaW5nKSB7fVxufVxuXG5leHBvcnQgaW50ZXJmYWNlIERhdGFUZXJyYWZvcm1SZW1vdGVTdGF0ZVJlbW90ZUNvbmZpZyBleHRlbmRzIERhdGFUZXJyYWZvcm1SZW1vdGVTdGF0ZUNvbmZpZywgUmVtb3RlQmFja2VuZFByb3BzIHt9Il19